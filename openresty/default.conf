server {
        listen 80;
        # server_name example.com;
        
        # 默認設置
        set $trace_id '';
        set $enable_trace_context 'on';
        set $trace_timeout '1000';
        set $trace_backend_url 'http://default-backend:8080';
        set $service_name 'default-service';
        set $enable_trace_metrics 'off';
        set $enable_trace_sanitization 'off';

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/local/openresty/nginx/html;
        index  index.html index.htm;
    }


        location /webhook {
            set $service_name 'webhook';
            set $enable_trace_metrics 'off';
            set $enable_trace_sanitization 'off';
            set $trace_backend_url 'http://10.174.0.2:8080';
            
            access_by_lua_block {
                local w3c_trace = require "w3c_trace"
                local ctx, err = w3c_trace.get_trace_context()
                if err then
                    ngx.log(ngx.ERR, "Failed to get trace context: ", err)
                    return
                end
                
                if ctx then
                    -- 生成 traceparent header
                    local traceparent = string.format("%s-%s-%s-%s", 
                        ctx.version, ctx.trace_id, ctx.parent_id, ctx.flags)
                    ngx.req.set_header("traceparent", traceparent)
                    -- 保存到 ngx.ctx 中供後續使用
                    ngx.ctx.trace_context = ctx
                    -- 設置響應頭，這樣在日誌中可以看到
                    ngx.header["traceparent"] = traceparent
                    ngx.log(ngx.DEBUG, "Set traceparent: ", traceparent)
                end
            }
            
            header_filter_by_lua_block {
                local w3c_trace = require "w3c_trace"
                local ctx = ngx.ctx.trace_context
                if ctx then
                    w3c_trace.set_response_headers(ctx)
                end
            }
            
            # 保留原有的 trace headers
            proxy_pass_request_headers on;
            
            # 添加代理相關配置
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_pass http://10.174.0.2:8080;
        }

    # location /test {
    #     content_by_lua_file /usr/local/openresty/lualib/w3c_trace.lua;
    # log_by_lua_block {
    #         -- 在请求结束后，记录 UUID 到日志
    #         ngx.log(ngx.ERR, "Request UUID: ", ngx.ctx.uuid)
    #     }
    # }




        # location /api/v1/ {
        #     set $service_name 'api-service';
        #     set $enable_trace_metrics 'off';
        #     set $enable_trace_sanitization 'off';
        #     # set $sanitize_auth 'on';
        #     # set $sanitize_cookie 'on';
        #     # set $sanitize_token 'on';
        #     set $sanitize_custom_fields 'api-key,secret';
        #     set $trace_backend_url 'http://api-backend:8080';
            
        #     access_by_lua_block {
        #         local w3c_trace = require "w3c_trace"
        #         local ctx = w3c_trace.get_trace_context()
        #         -- 可以在這裡添加額外的處理邏輯
        #     }
            
        #     header_filter_by_lua_block {
        #         local w3c_trace = require "w3c_trace"
        #         w3c_trace.set_response_headers(ngx.ctx.trace_context)
        #     }
            
        #     proxy_pass http://api_backend;
        # }
        
        # 靜態內容 - 基本追蹤
        # location /static/ {
        #     set $service_name 'static-service';
        #     set $enable_trace_metrics 'off';
        #     set $enable_trace_sanitization 'off';
            
        #     access_by_lua_block {
        #         local w3c_trace = require "w3c_trace"
        #         w3c_trace.get_trace_context()
        #     }
            
        #     header_filter_by_lua_block {
        #         local w3c_trace = require "w3c_trace"
        #         w3c_trace.set_response_headers(ngx.ctx.trace_context)
        #     }
            
        #     root /var/www/static;
        # }
        
        # 管理介面 - 高安全性追蹤
        # location /admin/ {
        #     set $service_name 'admin-service';
        #     set $enable_trace_metrics 'on';
        #     set $enable_trace_sanitization 'on';
        #     set $sanitize_auth 'on';
        #     set $sanitize_cookie 'on';
        #     set $sanitize_token 'on';
        #     set $sanitize_custom_fields 'session-id,csrf-token';
        #     set $trace_backend_url 'http://admin-backend:8080';
            
        #     access_by_lua_block {
        #         local w3c_trace = require "w3c_trace"
        #         local ctx = w3c_trace.get_trace_context()
        #     }
            
        #     log_by_lua_block {
        #         if ngx.var.enable_trace_metrics == 'on' then
        #             local w3c_trace = require "w3c_trace"
        #             local metrics = w3c_trace.get_metrics()
        #             -- 可以在這裡處理或輸出指標
        #             ngx.log(ngx.INFO, "Admin metrics: ", require("cjson").encode(metrics))
        #         end
        #     }
            
        #     header_filter_by_lua_block {
        #         local w3c_trace = require "w3c_trace"
        #         w3c_trace.set_response_headers(ngx.ctx.trace_context)
        #     }
            
            
        #     proxy_pass http://admin_backend;
        # }
        
        # 監控端點 - 僅供內部使用
        location /metrics {
            # allow 127.0.0.1;
            # deny all;
            
            content_by_lua_block {
                local w3c_trace = require "w3c_trace"
                local metrics = w3c_trace.get_metrics()
                if metrics then
                    ngx.say(require("cjson").encode(metrics))
                else
                    ngx.say('{"error": "Metrics collection is disabled"}')
                end
            }
        }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/local/openresty/nginx/html;
    }

}