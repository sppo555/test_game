server {
        listen 80;
        # server_name example.com;
        
        # W3C Trace Context 基本設置
        set $enable_trace_context 'on';            # 是否啟用 W3C Trace Context，on/off
        set $service_name 'default-service';       # 服務名稱
        
        access_by_lua_block {
            local w3c_trace = require "w3c_trace"
            local ctx, err = w3c_trace.get_trace_context()
            
            if err then
                ngx.log(ngx.ERR, "Failed to get trace context: ", err)
                return
            end
            
            if ctx then
                -- 生成 traceparent header
                local traceparent = string.format("%s-%s-%s-%s", 
                    ctx.version, ctx.trace_id, ctx.parent_id, ctx.flags)
                ngx.req.set_header("Traceparent", traceparent)
                -- 保存到 ngx.ctx 中供後續使用
                ngx.ctx.trace_context = ctx
                -- 設置響應頭，這樣在日誌中可以看到
                ngx.header["Traceparent"] = traceparent
                ngx.log(ngx.DEBUG, "Set Traceparent: ", traceparent)
            end
        }

        header_filter_by_lua_block {
            local w3c_trace = require "w3c_trace"
            local ctx = ngx.ctx.trace_context
            if ctx then
                w3c_trace.set_response_headers(ctx)
            end
        }

        location / {
            root   /usr/local/openresty/nginx/html;
            index  index.html index.htm;
        }

        location /webhook {
            set $service_name 'webhook';
            
            # 保留原有的 trace headers
            proxy_pass_request_headers on;
            
            # 添加代理相關配置
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_pass http://192.168.1.117:8080;
        }
}